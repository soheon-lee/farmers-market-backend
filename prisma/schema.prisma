// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model UserType {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  user      User[]

  @@map("user_types")
}

model User {
  id               Int             @id @default(autoincrement())
  email            String          @unique
  username         String?         @db.VarChar(100)
  password         String?         @db.VarChar(200)
  profileImageUrl  String?         @map("profile_image_url") @db.VarChar(3000)
  birthday         DateTime?
  socialPlatformId Int?            @map("social_platform_id")
  genderId         Int?            @map("gender_id")
  userTypeId       Int             @default(1) @map("user_type_id")
  createdAt        DateTime        @default(now()) @map("created_at")
  socialPlatform   SocialPlatform? @relation(fields: [socialPlatformId], references: [id])
  gender           Gender?         @relation(fields: [genderId], references: [id])
  seller           Seller?
  userType         UserType        @relation(fields: [userTypeId], references: [id])

  @@map("users")
}

model Seller {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(fields: [userId], references: [id])

  @@map("sellers")
}

model Gender {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  user      User[]

  @@map("genders")
}

model SocialPlatform {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  user      User[]

  @@map("social_platforms")
}

model Product {
  id             Int            @id @default(autoincrement())
  name           String
  price          Decimal?       @db.Decimal(10, 5)
  weight         String?
  productGroupId Int?           @map("product_group_id")
  productSizeId  Int?           @map("size_id")
  createdAt      DateTime       @default(now()) @map("created_at")
  productGroup   ProductGroup?  @relation(fields: [productGroupId], references: [id])
  productSize    ProductSize?   @relation(fields: [productSizeId], references: [id])
  productImage   ProductImage[]
  orderedItem    OrderedItem[]

  @@map("products")
}

model ProductGroup {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now()) @map("created_at")
  product   Product[]

  @@map("product_groups")
}

model ProductSize {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now()) @map("created_at")
  product   Product[]

  @@map("product_sizes")
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  imageUrl  String   @default("") @map("image_url") @db.VarChar(3000)
  productId Int      @map("product_id")
  createdAt DateTime @default(now()) @map("created_at")
  product   Product  @relation(fields: [productId], references: [id])

  @@map("product_images")
}

model Order {
  id            Int           @id @default(autoincrement())
  userId        Int           @map("user_id")
  orderNumber   String        @map("order_number")
  orderStatusId Int           @map("order_status_id")
  createdAt     DateTime      @default(now()) @map("created_at")
  orderStatus   OrderStatus   @relation(fields: [orderStatusId], references: [id])
  orderedItem   OrderedItem[]

  @@map("orders")
}

model OrderStatus {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  order     Order[]

  @@map("order_status")
}

model OrderedItem {
  id        Int      @id @default(autoincrement())
  orderId   Int      @map("order_id")
  productId Int      @map("product_id")
  quantity  Int      @default(1) @map("quantity")
  createdAt DateTime @default(now()) @map("created_at")
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@map("ordered_items")
}
